  {
    "stats": {
      "suites": 1,
      "tests": 5,
      "passes": 4,
      "pending": 0,
      "failures": 1,
      "start": "2025-05-01T19:31:45.255Z",
      "end": "2025-05-01T19:34:40.751Z",
      "duration": 175496,
      "testsRegistered": 5,
      "passPercent": 80,
      "pendingPercent": 0,
      "other": 0,
      "hasOther": false,
      "skipped": 0,
      "hasSkipped": false
    },
    "results": [
      {
        "uuid": "c9adf3df-a6b8-48f0-a6a1-fcf38f7b348e",
        "title": "",
        "fullFile": "cypress\\e2e\\dashboard.cy.js",
        "file": "cypress\\e2e\\dashboard.cy.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "20850775-c16f-4195-90a6-c90f4491a0df",
            "title": "Dashboard tests",
            "fullFile": "",
            "file": "",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Should load the page and compare data",
                "fullTitle": "Dashboard tests Should load the page and compare data",
                "timedOut": null,
                "duration": 19278,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": null,
                "code": "dashboard.visitDashboard();\ndashboard.scrollAndFindCountry('Germany');\ncy.fixture('expectedData.json').then(expectedData => {\n  cy.get('@countryData').then(actualData => {\n    expect(actualData.gdp).to.equal(expectedData.gdp);\n    expect(actualData.health).to.equal(expectedData.health);\n    expect(actualData.export).to.equal(expectedData.export);\n    expect(actualData.import).to.equal(expectedData.import);\n  });\n});",
                "err": {},
                "uuid": "a98c6506-1c28-4c18-b053-173978b312d6",
                "parentUUID": "20850775-c16f-4195-90a6-c90f4491a0df",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pick a country and check the different tables and charts",
                "fullTitle": "Dashboard tests Pick a country and check the different tables and charts",
                "timedOut": null,
                "duration": 8929,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": null,
                "code": "dashboard.visitDashboard();\ndashboard.pickAndSelectCountryFromHealthTable();\ncy.wait(2000);\ndashboard.scrollAndFindCountry('United States');\ncy.get('@countryData').then(actualData => {\n  cy.get(dashboard.canvasArea).should('contain', actualData.gdp);\n});\ncy.get(dashboard.scrollableMainTableRows).should('have.length', 2); //header and the row with country",
                "err": {},
                "uuid": "e5ef3ff2-c088-4530-a567-23feee45404c",
                "parentUUID": "20850775-c16f-4195-90a6-c90f4491a0df",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Validates top 8 inflation countries match pie chart",
                "fullTitle": "Dashboard tests Validates top 8 inflation countries match pie chart",
                "timedOut": null,
                "duration": 33282,
                "state": "failed",
                "speed": null,
                "pass": false,
                "fail": true,
                "pending": false,
                "context": null,
                "code": "dashboard.visitDashboard();\ndashboard.scrollAndCollectAllCountriesInflation();\ncy.getTop8FromPieChart();\ncy.get('@top8InflationCountries').then(fromTable => {\n  cy.get('@top8PieChart').then(fromChart => {\n    const tableNames = fromTable.map(c => c.name);\n    const chartNames = fromChart.map(c => c.name);\n    tableNames.forEach(name => {\n      expect(chartNames).to.include(name);\n    });\n  });\n});",
                "err": {
                  "message": "AssertionError: expected [ Array(8) ] to include 'Timor-Leste'",
                  "estack": "AssertionError: expected [ Array(8) ] to include 'Timor-Leste'\n    at eval (webpack:///./cypress/e2e/dashboard.cy.js:35:38)\nat Array.forEach (<anonymous>)\n    at Context.eval (webpack:///./cypress/e2e/dashboard.cy.js:34:25)\n    at getRet (https://app.fabric.microsoft.com/__cypress/runner/cypress_runner.js:119616:20)\n    at tryCatcher (https://app.fabric.microsoft.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://app.fabric.microsoft.com/__cypress/runner/cypress_runner.js:4285:29)",
                  "diff": null
                },
                "uuid": "67b217b6-0336-4171-93d4-910399f75b9d",
                "parentUUID": "20850775-c16f-4195-90a6-c90f4491a0df",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Matches dashboard layout with snapshot",
                "fullTitle": "Dashboard tests Matches dashboard layout with snapshot",
                "timedOut": null,
                "duration": 13287,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": null,
                "code": "dashboard.visitDashboard();\ncy.wait(3000);\ncy.get(dashboard.generalPageView).matchImageSnapshot();",
                "err": {},
                "uuid": "e240c21a-b959-4347-a8da-5a00830216a0",
                "parentUUID": "20850775-c16f-4195-90a6-c90f4491a0df",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Displays detailed view correctly when clicking on a top inflation country",
                "fullTitle": "Dashboard tests Displays detailed view correctly when clicking on a top inflation country",
                "timedOut": null,
                "duration": 32067,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": null,
                "code": "dashboard.visitDashboard();\ndashboard.scrollAndCollectAllCountriesInflation();\ncy.getTop8FromPieChart();\ncy.get('@top8PieChart').then(top8 => {\n  const targetCountry = top8[0].name;\n  const desiredCountry = `path[aria-label*=${targetCountry}]`;\n  cy.get(desiredCountry).should('exist').click({\n    force: true\n  });\n  cy.get(dashboard.highlightedCountryInTable).contains(targetCountry).should('exist');\n  cy.wait(1000);\n  dashboard.scrollAndFindCountry(targetCountry);\n  cy.get('@countryData').then(actualData => {\n    cy.get(dashboard.tables).eq(1).should('contain', actualData.gdp);\n  });\n});",
                "err": {},
                "uuid": "3ca5b193-4bfe-4db9-9527-c9297f7c9fbd",
                "parentUUID": "20850775-c16f-4195-90a6-c90f4491a0df",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a98c6506-1c28-4c18-b053-173978b312d6",
              "e5ef3ff2-c088-4530-a567-23feee45404c",
              "e240c21a-b959-4347-a8da-5a00830216a0",
              "3ca5b193-4bfe-4db9-9527-c9297f7c9fbd"
            ],
            "failures": [
              "67b217b6-0336-4171-93d4-910399f75b9d"
            ],
            "pending": [],
            "skipped": [],
            "duration": 106843,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": true,
        "rootEmpty": true,
        "_timeout": 2000
      }
    ],
    "meta": {
      "mocha": {
        "version": "7.2.0"
      },
      "mochawesome": {
        "options": {
          "quiet": false,
          "reportFilename": "mochawesome",
          "saveHtml": false,
          "saveJson": true,
          "consoleReporter": "spec",
          "useInlineDiffs": false,
          "code": true
        },
        "version": "7.1.3"
      },
      "marge": {
        "options": {
          "reportDir": "cypress/reports",
          "overwrite": false,
          "html": false,
          "json": true
        },
        "version": "6.2.0"
      }
    }
  }